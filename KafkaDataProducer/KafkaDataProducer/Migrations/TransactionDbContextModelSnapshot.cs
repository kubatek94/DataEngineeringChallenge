// <auto-generated />
using System;
using KafkaDataProducer.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;

namespace KafkaDataProducer.Migrations
{
    [DbContext(typeof(TransactionDbContext))]
    partial class TransactionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KafkaDataProducer.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.SeedData(new[]
                    {
                        new { Id = 1L, CreatedDate = new DateTime(2018, 3, 10, 19, 49, 24, 25, DateTimeKind.Utc), FirstName = "Joe", LastName = "Blogs" },
                        new { Id = 2L, CreatedDate = new DateTime(2018, 3, 12, 19, 49, 24, 25, DateTimeKind.Utc), FirstName = "Dave", LastName = "Smith" },
                        new { Id = 3L, CreatedDate = new DateTime(2018, 3, 13, 19, 49, 24, 25, DateTimeKind.Utc), FirstName = "Adolf", LastName = "Walker" },
                        new { Id = 4L, CreatedDate = new DateTime(2018, 3, 14, 19, 49, 24, 25, DateTimeKind.Utc), FirstName = "Steve", LastName = "Evans" },
                        new { Id = 5L, CreatedDate = new DateTime(2018, 3, 15, 9, 49, 24, 25, DateTimeKind.Utc), FirstName = "Lee", LastName = "Brown" },
                        new { Id = 6L, CreatedDate = new DateTime(2018, 3, 15, 9, 49, 24, 25, DateTimeKind.Utc), FirstName = "Jack", LastName = "Taylor" },
                        new { Id = 7L, CreatedDate = new DateTime(2018, 3, 15, 10, 49, 24, 25, DateTimeKind.Utc), FirstName = "Alex", LastName = "Jones" },
                        new { Id = 8L, CreatedDate = new DateTime(2018, 3, 15, 14, 49, 24, 25, DateTimeKind.Utc), FirstName = "Zee", LastName = "Smith" },
                        new { Id = 9L, CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 25, DateTimeKind.Utc), FirstName = "Nat", LastName = "Jones" },
                        new { Id = 10L, CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 25, DateTimeKind.Utc), FirstName = "Will", LastName = "Smith" }
                    });
                });

            modelBuilder.Entity("KafkaDataProducer.Models.Merchant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Postcode")
                        .HasMaxLength(10);

                    b.Property<string>("TradingName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Merchants");

                    b.SeedData(new[]
                    {
                        new { Id = 1L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "Chicken Shop" },
                        new { Id = 2L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "SE10 0QW", TradingName = "Phone Shop" },
                        new { Id = 3L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "My Taxis" },
                        new { Id = 4L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "MouseTrap" },
                        new { Id = 5L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "MagsRUs" },
                        new { Id = 6L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "House of Jack" },
                        new { Id = 7L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "Russion Poisions" },
                        new { Id = 8L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "Coffee Shop" },
                        new { Id = 9L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "Other Taxi" },
                        new { Id = 10L, City = "London", CreatedDate = new DateTime(2018, 3, 15, 19, 49, 24, 27, DateTimeKind.Utc), Postcode = "W1 4UT", TradingName = "Another Taxi" }
                    });
                });

            modelBuilder.Entity("KafkaDataProducer.Models.Transaction", b =>
                {
                    b.Property<long>("Id");

                    b.Property<decimal>("Amount");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(26);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("CustomerId");

                    b.Property<long>("MerchantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MerchantId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("KafkaDataProducer.Models.Transaction", b =>
                {
                    b.HasOne("KafkaDataProducer.Models.Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KafkaDataProducer.Models.Merchant")
                        .WithMany("Transactions")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
